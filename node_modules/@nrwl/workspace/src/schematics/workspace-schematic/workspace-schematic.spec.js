"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const testing_1 = require("@nrwl/workspace/testing");
const testing_2 = require("../../utils/testing");
describe('workspace-schematic', () => {
    let appTree;
    beforeEach(() => {
        appTree = testing_1.createEmptyWorkspace(schematics_1.Tree.empty());
    });
    it('should generate files', () => __awaiter(void 0, void 0, void 0, function* () {
        const tree = yield testing_2.runSchematic('workspace-schematic', { name: 'custom' }, appTree);
        expect(tree.exists('tools/schematics/custom/index.ts')).toBeTruthy();
        expect(tree.exists('tools/schematics/custom/schema.json')).toBeTruthy();
    }));
});
