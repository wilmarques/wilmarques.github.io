"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const npm_packages_1 = require("./npm-packages");
const file_utils_1 = require("../..//file-utils");
const json_diff_1 = require("../../../utils/json-diff");
describe('getTouchedNpmPackages', () => {
    let workspaceJson;
    let nxJson;
    beforeEach(() => {
        workspaceJson = {
            projects: {
                proj1: {},
                proj2: {},
            },
        };
        nxJson = {
            implicitDependencies: {
                'package.json': {
                    dependencies: ['proj1'],
                    some: {
                        'deep-field': ['proj2'],
                    },
                },
            },
            npmScope: 'scope',
            projects: {
                proj1: {},
                proj2: {},
            },
        };
    });
    it('should handle json changes', () => {
        const result = npm_packages_1.getTouchedNpmPackages([
            {
                file: 'package.json',
                mtime: 0,
                ext: '.json',
                getChanges: () => [
                    {
                        type: json_diff_1.DiffType.Modified,
                        path: ['dependencies', 'happy-nrwl'],
                        value: {
                            lhs: '0.0.1',
                            rhs: '0.0.2',
                        },
                    },
                ],
            },
        ], workspaceJson, nxJson, {
            dependencies: {
                'happy-nrwl': '0.0.2',
            },
        });
        expect(result).toEqual(['happy-nrwl']);
    });
    it('should handle package deletion', () => {
        const result = npm_packages_1.getTouchedNpmPackages([
            {
                file: 'package.json',
                mtime: 0,
                ext: '.json',
                getChanges: () => [
                    {
                        type: json_diff_1.DiffType.Deleted,
                        path: ['dependencies', 'sad-nrwl'],
                        value: {
                            lhs: '0.0.1',
                            rhs: undefined,
                        },
                    },
                ],
            },
        ], workspaceJson, nxJson, {
            dependencies: {
                'happy-nrwl': '0.0.2',
            },
        });
        expect(result).toEqual(['proj1', 'proj2']);
    });
    it('should handle package addition', () => {
        const result = npm_packages_1.getTouchedNpmPackages([
            {
                file: 'package.json',
                mtime: 0,
                ext: '.json',
                getChanges: () => [
                    {
                        type: json_diff_1.DiffType.Added,
                        path: ['dependencies', 'awesome-nrwl'],
                        value: {
                            lhs: undefined,
                            rhs: '0.0.1',
                        },
                    },
                ],
            },
        ], workspaceJson, nxJson, {
            dependencies: {
                'happy-nrwl': '0.0.2',
                'awesome-nrwl': '0.0.1',
            },
        });
        expect(result).toEqual(['awesome-nrwl']);
    });
    it('should handle whole file changes', () => {
        const result = npm_packages_1.getTouchedNpmPackages([
            {
                file: 'package.json',
                mtime: 0,
                ext: '.json',
                getChanges: () => [new file_utils_1.WholeFileChange()],
            },
        ], workspaceJson, nxJson, {
            dependencies: {
                'happy-nrwl': '0.0.1',
                'awesome-nrwl': '0.0.1',
            },
        });
        expect(result).toEqual(['happy-nrwl', 'awesome-nrwl']);
    });
});
