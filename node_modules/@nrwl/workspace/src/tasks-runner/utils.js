"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commonCommands = ['build', 'test', 'lint', 'e2e', 'deploy'];
function getCommandAsString(cliCommand, isYarn, task) {
    return getCommand(cliCommand, isYarn, task).join(' ').trim();
}
exports.getCommandAsString = getCommandAsString;
function getCommand(cliCommand, isYarn, task) {
    const args = Object.entries(task.overrides || {}).map(([prop, value]) => `--${prop}=${value}`);
    if (commonCommands.includes(task.target.target)) {
        const config = task.target.configuration
            ? [`--configuration`, task.target.configuration]
            : [];
        return [
            cliCommand,
            ...(isYarn ? [] : ['--']),
            task.target.target,
            task.target.project,
            ...config,
            ...args,
        ];
    }
    else {
        const config = task.target.configuration
            ? `:${task.target.configuration} `
            : '';
        return [
            cliCommand,
            ...(isYarn ? [] : ['--']),
            'run',
            `${task.target.project}:${task.target.target}${config}`,
            ...args,
        ];
    }
}
exports.getCommand = getCommand;
function getOutputs(p, task) {
    return getOutputsForTargetAndConfiguration(task.target.target, task.target.configuration, p[task.target.project]);
}
exports.getOutputs = getOutputs;
function getOutputsForTargetAndConfiguration(target, configuration, node) {
    const architect = node.data.architect[target];
    if (architect && architect.outputs)
        return architect.outputs;
    let opts = architect.options || {};
    if (architect.configurations && architect.configurations[configuration]) {
        opts = Object.assign(Object.assign({}, opts), architect.configurations[configuration]);
    }
    if (opts.outputPath) {
        return Array.isArray(opts.outputPath) ? opts.outputPath : [opts.outputPath];
    }
    else if (target === 'build') {
        return [`dist/${node.data.root}`];
    }
    else {
        return [];
    }
}
exports.getOutputsForTargetAndConfiguration = getOutputsForTargetAndConfiguration;
